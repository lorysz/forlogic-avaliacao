// <auto-generated />
using System;
using Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200529125650_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infra.Entities.Avaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<float>("Nota")
                        .HasColumnType("real");

                    b.HasKey("IdAvaliacao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("tb_avaliacao");
                });

            modelBuilder.Entity("Infra.Entities.AvaliacaoCliente", b =>
                {
                    b.Property<int>("IdAvaliacaoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAvaliacao")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<float>("Nota")
                        .HasColumnType("real");

                    b.Property<string>("ResultadoAvaliacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAvaliacaoCliente");

                    b.HasIndex("IdAvaliacao");

                    b.HasIndex("IdCliente");

                    b.ToTable("tb_avaliacao_cliente");
                });

            modelBuilder.Entity("Infra.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdUsuario");

                    b.ToTable("tb_cliente");

                    b.HasData(
                        new
                        {
                            IdCliente = 1,
                            Cnpj = "24.573.802/0001-59",
                            DataCadastro = new DateTime(2020, 5, 29, 9, 56, 50, 341, DateTimeKind.Local).AddTicks(1156),
                            IdUsuario = 1,
                            NomeResponsavel = "Arthur",
                            RazaoSocial = "Arthur e Geraldo Eletrônica ME"
                        },
                        new
                        {
                            IdCliente = 2,
                            Cnpj = "21.062.238/0001-11",
                            DataCadastro = new DateTime(2020, 5, 29, 9, 56, 50, 341, DateTimeKind.Local).AddTicks(1795),
                            IdUsuario = 1,
                            NomeResponsavel = "Roberto",
                            RazaoSocial = "Roberto e Tânia Assessoria Jurídica Ltda"
                        },
                        new
                        {
                            IdCliente = 3,
                            Cnpj = "34.202.824/0001-66",
                            DataCadastro = new DateTime(2020, 5, 29, 9, 56, 50, 341, DateTimeKind.Local).AddTicks(1803),
                            IdUsuario = 1,
                            NomeResponsavel = "Allana",
                            RazaoSocial = "Allana e Diogo Transportes Ltda"
                        },
                        new
                        {
                            IdCliente = 4,
                            Cnpj = "84.234.045/0001-10",
                            DataCadastro = new DateTime(2020, 5, 29, 9, 56, 50, 341, DateTimeKind.Local).AddTicks(1806),
                            IdUsuario = 1,
                            NomeResponsavel = "Igor",
                            RazaoSocial = "Igor e Fernando Consultoria Financeira ME"
                        });
                });

            modelBuilder.Entity("Infra.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("tb_usuario");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Email = "adm@adm.com.br",
                            Nome = "Administrador",
                            Senha = "123"
                        });
                });

            modelBuilder.Entity("Infra.Entities.Avaliacao", b =>
                {
                    b.HasOne("Infra.Entities.Usuario", "Usuario")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infra.Entities.AvaliacaoCliente", b =>
                {
                    b.HasOne("Infra.Entities.Avaliacao", "Avaliacao")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdAvaliacao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infra.Entities.Cliente", "Cliente")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infra.Entities.Cliente", b =>
                {
                    b.HasOne("Infra.Entities.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
